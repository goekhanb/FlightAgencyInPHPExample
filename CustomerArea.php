<?php

require_once './Page.php';


class CustomerArea extends Page
{

    private $customer;
    private $gender;
    private $nationality;

    protected function __construct()
    {
        parent::__construct();
        $this->customer='';
        $this->nationality='';
        $this->gender='';
    }

    protected function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
    }


    protected function getViewData()
    {
        $customer = array();
        $sql = "select name,passport_number from flightcustomer";
        $sqlQuery = $this->_database->query($sql);
        if (!$sqlQuery) throw new Exception("Query not found : " . $this->_database->error);


        while($record = $sqlQuery->fetch_assoc()){
        $customer = $record;

        }
        $sqlQuery->free();
        return $customer;
    }

    function findCustomer($passport_number)
    {
        $votes = array();
        $q = "SELECT * FROM flightcustomer WHERE passport_number = '$passport_number'";
        $r = $this->_database->query($q);
        if(!$r)throw new Exception("Query is incorrect: " . $this->_database->error);

           while($row = $r->fetch_assoc()){
               if($r->num_rows==1)//id found in the table
               {
            $votes[0] = $row['passport_number'];
            $votes[1] = $row['name'];
            $votes[2] = $row['gender'];
            $votes[3] = $row['nationality'];
           }
           }
        $r->free();
        return $votes;
    }

    protected function generateView(){
        $this->generatePageHeader('Customer Area');

        echo <<< EOT

        <form action="CustomerArea.php" method="post" onsubmit="">
            <fieldset>
        <table align="center">
           <tr>
             <th>
               WILLCOME to Customer Area        
             </th>
          </tr>
        
        <tr><td></td></tr>
         
         <tr align="center">
             <td>
               Customer passport number         
             </td>
          </tr>
        
           <tr align="center">
             <td>
              <input type="text" name="inputPassportNumber" id="inputPassportNumber_ID" placeholder="passport number">           
             </td>
          </tr>
          
           <tr align="center">
             <td>
              <input type="submit" name="inputSubmitBtn" id="inputSubmitBtn_ID" value="Customer Data?">           
             </td>
          </tr>
          
          <tr>
             <td></td>
          </tr>
          
           <tr align="center">
             <td>
EOT;
            echo "<p>$this->customer</p>";
            echo "<p>$this->gender</p>";
            echo "<p>$this->nationality</p>";

            echo <<< EOT
                      
             </td>
          </tr>
             
                
        </table>        
            </fieldset>
        </form>            
        
EOT;

        $this->generatePageFooter();
    }

    protected function processReceivedData()
    {
        parent::processReceivedData();

        if(isset($_POST["inputPassportNumber"])){
            $passport_number = $this->_database->real_escape_string($_POST["inputPassportNumber"]);
           if(isset($_POST['inputSubmitBtn'])){

           $sqlSelect = "select passport_number,name,gender,nationality from flightcustomer where passport_number = '$passport_number'";
           $sqlSelectQuery = $this->_database->query($sqlSelect);
           if(!$sqlSelectQuery) throw  new Exception("404 not found: " . $this->_database->error);
            if($sqlSelectQuery->num_rows == 0 || isset($_POST["inputPassportNumber"]) == empty($_POST["inputPassportNumber"])){
                throw new Exception("Customer not found!" . "\n". " try it again!");
            }
            else{
             $this->customer = $this->findCustomer($passport_number)[1];
             $this->gender= $this->findCustomer($passport_number)[2];
             $this->nationality = $this->findCustomer($passport_number)[3];
            }
           }

        }

    }

    public static function main()
    {
       try{
        $page = new CustomerArea();
        $page->processReceivedData();
        $page->generateView();
       }

       catch (Exception $exception){
         header("Content-type:text/plain");
         echo $exception->getMessage();
       }
    }

}CustomerArea::main();